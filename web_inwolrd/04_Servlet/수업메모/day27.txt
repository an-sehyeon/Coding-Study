https://us06web.zoom.us/rec/share/D9xRcHeWjwn3jFyDBYHD5tRLqRHKprzhIexDHvSeRotJ6PLGuBZZgqUBGJOpbghR.6RWod4EPIKvSHuip
S@ti+iu9


1. 내장 객체(Object)
    - 객체화 없이 사용할 수 있는 객체
    - jsp가 서블릿으로 변환될 때 웹 컨테이너가 자동으로 메모리에 할당
    - request : 웹 브라우저의 요청 정보 저장
    - response : 웹 브라우저의 요청에 대한 응답 정보 저장
    - out : JSP 페이지에 출력할 내용 저장
    - session : 하나의 웹 브라우저에 있는 정보를 저장
    - pageContext : JSP 페이지에 대한 정보 저장
    - config : JSP 페이지에 대한 설정 정보 저장
    - exception : JSP에서 예외가 발생했을 때 사용하는 객체


2. GET과 POST
    (1) GET
        - 주소에 데이터를 포함한다.
        - 보통 쿼리 문자열에 포함되어 전송하므로 길이에 제한이 있음
        - 보안성이 취약하므로 중요 데이터는 사용 불가
        - 디버깅이 쉽고 상대적으로 빠름

    (2) POST
        - 데이터를 별도로 첨부하는 방식
        - 브라우저 히스토리에도 남지 않고 데이터는 별도로 전송
        - 데이터의 길이 제한 없음
        - 보안성이 좋으나, GET에 비해 상대적으로 느림
        - 테스트를 위해 Postman, Talend API Tester 등x
        - 외부 플러그인 사용

3. 쿠키(Cookie)
    - 웹 브라우저가 보관하고 있는 데이터(로컬에)
    - 웹 서버에 요청을 보낼 때 쿠키를 헤더에 담아 전송
    - 웹 브라우저는 쿠키가 삭제되기 전까지 웹 서버에 쿠키 전송

    장단점
        - 클라이언트의 특정 폴더에 정보를 저장하므로 서버 부하 낮음
        - 데이터 저장 용량의 한계
        - 일반 사용자가 브라우저 설정에서 쿠키 차단을 사용하면 사용 불가
        - 정보가 사용자 PC에 저장되므로 보안 위협 존재

    동작 방식
        1) 쿠키 생성 : 웹 서버가 쿠키를 생성하고 response에 쿠키를 담아서 웹 브라우저에 전송
        2) 쿠키 저장 : 웹 브라우저는 응답에 있는 쿠키를 메모리 또는 디스크에 저장
        3) 쿠키 전송 : 웹 브라우저는 쿠키 요청이 올 때마다 웹 서버에 전송


4. 세션(Sesseion)
    - 내장 객체로서 브라우저마다 한 개씩 존재하고 고유한 세션 아이디(SesseionID) 생성 후 정보 추출

    장점
     - JSP 등 언어에서만 접근 가능하므로 보안성이 좋음
     - 저장 용량 한계가 거의 없음

    단점
     - 서버에 데이터를 저장하므로 서버에 부하 위험 