package com.sehyeon.sportspsychology.service;


import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import com.sehyeon.sportspsychology.bean.LoginVO;
import com.sehyeon.sportspsychology.mapper.Loginmapper;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class LoginService implements UserDetailsService {

    private final Loginmapper loginmapper;
    private final BCryptPasswordEncoder passwordEncoder;		// 비밀번호 암호화 처리기 추가

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        // 데이터베이스에서 사용자 정보 조회
        LoginVO user = loginmapper.findByUsername(username);

        if (user == null) {
            throw new UsernameNotFoundException("사용자를 찾을 수 없습니다: " + username);
        }
        
        // 암호화된 비밀번호 비교
        if(!passwordEncoder.matches(user.getPassword(), user.getPassword())) {
        	throw new UsernameNotFoundException("비밀번호가 일치하지 않습니다.");
        }

        // UserDetails 객체 생성
        return User.builder()
                .username(user.getUsername())
                .password(user.getPassword()) // 암호화된 비밀번호 사용
                .roles("USER") // 역할 부여 (데이터베이스에 따라 동적으로 설정 가능)
                .build();
    }
}
