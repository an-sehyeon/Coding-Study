package com.sehyeon.sychology.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

	@Bean
	public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
		
		http
			.authorizeHttpRequests((auth) -> auth
					.requestMatchers("/main", "/login").permitAll()						// permitAll : 모든 사용자에게 login 하지 않아도 접근 가능
//					.requestMatchers("/admin").hasRole("ADMIN")						// hasRole : login 해야만 경로에 접근 설정
					.requestMatchers("/admin").hasAuthority("ROLE_ADMIN")
					.requestMatchers("/mypage/**").hasAnyRole("ADMIN", "USER")		// 여러가지의 Role을 설정 가능
					.anyRequest().authenticated()									// authenticated : login 한 사용자만 접근하도록 설정
		);
		
		http
			.formLogin((auth) -> auth.loginPage("/login")
					.loginProcessingUrl("/loginProc")
					.permitAll()
			);
		
		
		http
			.csrf((auth) -> auth.disable());
		
		return http.build();
	}
}
