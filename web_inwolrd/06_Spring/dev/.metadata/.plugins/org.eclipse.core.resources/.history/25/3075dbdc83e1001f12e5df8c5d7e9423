package com.sehyeon.psychology.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {

	@Bean
	public BCryptPasswordEncoder bCryptPasswordDEncoder() {
		
		return new BCryptPasswordEncoder();
	}
	
	@Bean
	public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
		
		
		http
			.authorizeHttpRequests((auth) -> auth
					.requestMatchers("/", "/main", "/login", "/loginProc", "/join", "/joinProc").permitAll()		// permitAll : 해당 경로는 인증을 하지 않아도 접근 가능
					.requestMatchers("/login").anonymous()							// 로그인한 사용자는 /login 접근 불가
					.requestMatchers("/admin").hasRole("ADMIN")						// hasRole : "ADMIN" 권한이 있는 사용자만 접근 가능
					.requestMatchers("/my/**").hasAnyRole("ADMIN", "USER")			// /mypage/를 포함한 하위 경로 전체에 대해 "ADMIN", "USER" 권한을 가진 사용자만 접근 가능
					.anyRequest().authenticated()									// anyRequest().authenticated() : 위에서 설정한 특정 url을 제외한 나머지 요청은 로그인해야 접근 가능 
		);

		
		
		http
			.formLogin((auth) -> auth.loginPage("/login")							// 로그인 페이지 경로
					.loginProcessingUrl("/loginProc")								// 로그인 처리 URL
					.permitAll()
					.defaultSuccessUrl("/Psychology/main", true)					// 로그인 성공 시 이동할 페이지
			);
		
		
		http
			.csrf((auth) -> auth.disable());
		
		
		return http.build();
	}
}
