
 [ 1) 분기문 ]
 조건문과 반복문 중간에서 코드블럭을 나눠서 처리하는 문법
 그 예로는 if문, switch문 등이 있다.

 ============================================

 [ 2) if문 ]
 조건문을 작성할 때 사용하는 구문.

 조건식이 참이라면 코드 블럭을 실행
 조건식이 거짓이라면 코드 블럭을 무시(스킵)
 ++) else문을 통해 조건이 거짓일 경우의 실행코드를 지정 할 수 있다.

 조건식은 참 또는 거짓을 판단할 수 있는 식이여야만 한다.
 참과 거짓, 0과 1

 ============================================

 [ 3) if문의 형식 ]
 
 1. if문

 if ( 조건식 ) {

		조건식이 참이라면 이 실행코드 실행
 }
 

 #include <stdio.h>
 int main() {

 	if (1) {
	printf("조건식이 참이고 if문 진입\n");	// if의 조건식이 참인경우 실행
	}

	printf("if문 처리 이후 실행코드\n");

 return 0;
 }

 ============================================

 #include <stdio.h>
 int main() {
	
	int num = 0;
	printf("정수를 입력하세요>>> ");
	scanf_s("%d", &num);

	if ( num % 2 == 0)	{		// num이 짝수라면
	printf("%d는 짝수입니다. \n", num);	// printf문 출력
	printf("첫번째 if문 끝.\n");
	}

	if (num %2 ==1) {			// num이 홀수라면
	printf("%d는 홀수입니다.\n",num);	// printf문 출력
	pfintf("두번째 if문 끝.\n");
	}

 retrunt 0;
 }

 ============================================

 [ 문제 1) ]
 - 사용자로부터 정수 하나를 입력받고 3의 배수이면 3의 배수입니다 가 출력되도록 코딩하시오

 #include <stdio.h>
 int main() {
 	
	printf("정수 하나를 입력하세요>>>\n");
	int num = 0;
	scanf_s("%d",&num);		// scanf_s()를 통해 num값을 입력받고
	if (num % 3 ==0) {			// num이 홀수라면
	printf("3의 배수입니다.");		// printf 출력
	}				
	if (num % 3 == 1 || num % 3 == 2) {	// num이 3의 3의 배수가 아니라면
	printf("3의 배수가 아닙니다.");		// printf 출력	
	}

 }
 

 ============================================


 if문과 else문

 if ( 조건식 ) {
			// 조건식이 참이라면 이 실행코드 실행

 }
	else {
			// 조건식이 거짓이라면 이 실행코드 실행
 }


 ============================================


 [ 삼항연산자 연장선 예제 ]
 두 수를 입력받아 큰 수를 출력하세요 (if문 사용)

 #include <stdio.h>
 int main() {
	int n1 = 0;
	int n2 = 0;
	printf(" 두 수 입력 : ");
	scanf_s("%d%d, &n1, &n2");

	if ( n1 > n2 ) {			// n1이 n2보다 크다면
	 printf("큰 수 : %d\n",n1);		// 실행코드 실행
	} else {				// 조건식에 부합하지 않는다면
	 printf("큰 수 : %d\n",n2);		// 실행코드 실행
	}

 return 0;
 }


 ============================================


 [ 문제 1) ]
 - 사용자로부터 두 정수를 입력받는다.
 - 두 수의 합이 짝수면 " 두 수의 합은 짝수입니다."
 - 두 수의 합이 홀수면 " 두 수의 합은 홀수입니다."
 - 위와 같은 결과값이 나오도록 코딩하시오

 #include <stdio.h>
 int main() {
	int n1 = 0;
	int n2 = 0;
	scnaf_s("%d%d", &n1, &n2);
	int sum = n1 + n2;				
	
	if ( sum % 2 == 0) {			// sum이 짝수라면
	 printf(" 두 수의 합은 짝수입니다.\n");		// 실행코드 실행
	} else {					// 아니라면
	 printf(" 두 수의 합은 홀수입니다.\n");		// 실행코드 실행
	}
 return 0;
 }


 ============================================


 [ 중첩 if문 ]

 if ( 조건식 1 ) {

			// 조건이 참인 경우 실행되는 코드 블록
 if ( 조건식 2 ) {
			// 조건식 1과 조건식 2가 모두 참인 경우 실행되는 코드 블록
  }
 }


 ============================================


 [ 중첩 if문과 else문 ]

 if ( 조건식1 ) {
			// 조건이 참인 경우 실행되는 코드 블록
	if ( 조건식2 ) {
			// 조건식 1과 조건식 2가 모두 참인 경우 실행되는 코드 블록
  }
 }
 else {
			// 조건식 1이 거짓인 경우 실행되는 코드 블록
 }


 ============================================


 [ 문제 ]
 - 짝수이면서 3의 배수이면 출력
 - 홀수이면서 5의 배수이면 출력

 #include <stdio.h>
 int main () {
	
	int num = 0;
	printf("정수를 하나 입력해주세요>>>");
	scanf_s("%d",&num);

	if ( num % 2 == 0 )	{				// 짝수라면 ?
	if ( num % 3 == 0 ) {				// 짝수이면서 3의 배수라면 ?
	printf("%d는 짝수이면서 3의 배수입니다.\n",num);		// 실행코드 실행
  }
 	else {						// 3의 배수가 아니라면?
	printf("%d는 짝수이면서 3의 배수가 아닙니다.\n",num);	// 실행코드 실행	
	}
 }
 	else {						// 홀수라면 ?
	if ( num % 5 == 0 ) {				// 홀수이면서 5의 배수라면 ?
	printf("%d는 홀수이면서 5의 배수입니다.\n", num);	// 실행코드 실행
  }
 	else {						// 홀수이지만 5의 배수가 아니라면?
 	printf("%d는 홀수이면서 5의 배수가 아닙니다.\n", num);	// 실행코드 실행
  }
 }
 }
	

 ============================================


 [ &&(앤드 연산자) 이용 ]

 #include <stdio.h>
 int main () {
	
	int num = 0;
	printf("정수 : ");
	scanf_s("%d", &num);

	if ( num % 3 == 0 && num % 4 == 0 ) {	// 3과 4의 배수
	printf("%d는 3의 배수이면서 4의 배수\n", num);
	}
	if ( num % 3 == != 0 && num % 5 != 0) {	// 3과 5의 배수가 아니라면
	printf("%d는 3의 배수도 아니면서 5의 배수도 아님\n, num);
  }
 }


 ============================================


 [ else - if (다중분기) ]
	
 #include <stdio.h>
 int main () {

	int age = 0;
	printf("나이를 입력하세요 >>> " );
	scanf_s("%d", &age);

	if ( age >= 20 ) {		// age가 20이상이라면 ?
	printf("성인입니다.\n");
	}
	else if ( age >= 8 )	{	// age가 8이상, 20 미만이라면 ?
	printf("취학 아동입니다.\n");
	}
	else {			// 모든 조건에 부합하지 않는 조건이라면?
	printf("미취학 아동입니다.\n);	// 8살미만
	}
 return 0;
 }


 ============================================


 [ 문제 ]
 - 국어 영어 수학 점수 하나라도 40점미만 ==> "불합격입니다."
 - 전체 평균이 60점 미만 ==> "불합격입니다."

 - 국어 영어 수학 점수 모두 40점 이상 ==> "합격입니다."
 - 전체 평균이 60점 이상 ==> "합격입니다."

 - hint : 국영수 성적을 담을 세 변수 선언
 - hint : avg 평균에 대한 변수 선언
 - hint : 합격을 기준 ???  불합격을 기준 ???


 #include <stdio.h>
 int main() {

	int kor = 0;
	int eng = 0;
	int mat = 0;

	int avg = (kor + eng + mat) / 3;

	printf("국어, 영어, 수학 점수를 입력하세요>>>");
	scanf_s("%d %d %d\n", &kor, &eng, &mat);

	// kor,eng,mat가 전부 40이상이고 avg가 60이상이라면
	if (kor >= 40 && eng >= 40 && mat >= 40 && avg >= 60) {

	// 실행코드 실행	
	printf("합격입니다.");
	}
	
	// 조건이 부합하지 않는다면
	else {
		printf("불합격입니다.");
	}


	if (kor < 40) {			// kor가 40 미만이라면
		printf("불합격입니다.\n");	
	}
	else if (mat < 40) {			// mat가 40 미만이라면
		printf("불합격입니다.\n");	
	}
	else if (eng < 40) {			// eng가 40 미만이라면
		printf("불합격입니다.\n");	
	}
	else if (avg < 60) {			// avg가 60 미만이라면
		printf("불합격입니다.\n");	
	}
	else {				// 위 조건들에 부합하지 않는다면
		printf("합격입니다.\n");	
	}

  }
 }	



 ============================================


 [ switch문 ( 다중 분기 ) ]
 - 조건문 중 하나
 - 조건이 여러개일 때 각 조건에 따른 코드를 실행할 수 있음

 ============================================

 [ switch문 구조 ]

 switch (변수) {
 case 값1 :			// case는 여러개일 수 있다.
  	
     실행할 코드1;			// case == if문이면서 else if문이기도 함.
     break;				// 위 코드를 실행 후 break;를 만나면 탈출

 case 값2 : 			// 얘는 else if

     실행할 코드2;
     break;

 default;				// else문 (case의 조건에 부합하지 않을 시 나머지 처리)
     break;
 }


 ============================================


 #include <stdio.h>
 int main() {
	
	int num = 0;
	printf("한개의 정수를 입력하세요 >>>");
	scanf_s("%d", &num);

	switch (num) {

	case 1 :							// num이 1이라면?
	printf("[SYSTEM] : num이 1인 경우에 실행되는 코드입니다.\n");	// 실행코드를 실행하고
	break;							// switch문을 종료						
	
	case 2 : 							// num이 2이라면?
	printf("[STSTEM] : num이 2인 경우에 실행되는 코드입니다.\n");	// 실행코드를 실행하고
	break;							// switch문을 종료	

	case 3 : 							// num이 3이라면?
	printf("[STSTEM] : num이 3인 경우에 실행되는 코드입니다.\n");	// 실행코드를 실행하고
	break;							// switch문을 종료	

	default :							// num이 1,2,3이아니라면?
	printf("[STSTEM] : 1,2,3 이외의 모든 경우에 실행되는 코드입니다.\n");	// 실행코드를 실행하고
	break;							// switch문을 종료	
 }

	printf("Switch문, 즉 다중분기문을 종료하겠습니다.");
 return 0;
 }


 ============================================


 [ break가 필요한 이유 ]

 #include <stdio.h>
 int main() {

	int num = 0;
	printf("정수 한개를 입력해주세요 >>>");
	scanf_s("%d", &num);

	switch(num) {

	case 1 :
	pritnf("1 입력입니다.\n");

	case 2 :
	pritnf("2 입력입니다.\n");

	case 3 :
	pritnf("3 입력입니다.\n");

	default :
	pritnf("나머지 경우의 수 입력입니다.\n");
	}

	printf("switch문을 종료합니다.\n");
 return 0;
 }


 ============================================


 [ 반복문 ]
 - 반복적인 실행이 필요할 때 반복문을 사용함.


 ============================================

 [ while문의 구조 ]
 - 조건식이 참인 경우 반복적으로 코드를 실행한다.

 while (조건) {
    반복 실행 코드;			// 예 ) 조건이 참이면 코드 실행
				//       조건이 거짓이면 반복문 종료
 }

 ============================================

 [ do - while문의 구조
 - do - while문은 무조건 한번 실행 후 조건식 판별


 do {				// 일단 진행해라.
     조건식 판별 전 실행할 코드;	// 조건식 상관없이 실행
     반복적으로 실행될 코드;		// 조건식에 따라 실행

 } while (조건);


 ============================================


 #include <stdio.h>
 int main() {
			// 탈출용 변수	
			// 탈출용 조건식
			// 탈출을 위한 연산식

 	int i = 1;			// 탈출용 변수

	while ( i <= 10) {		// 탈출용 조건식
	printf("Hello World\n");
	i++;			// 탈출을 위한 증감식
	}
 return 0;
 }


 ============================================


 #include <stdio.h>
 int main() {
	
	int num = 1;

	do {			// num = 1
	printf("%d\n", num);	// 1부터 1씩 더해서 
	num++;			// 출력
	} while ( num <= 10 );	// 조건인 num이 10보다 클때까지 do문 반복
 return 0;
 }


 ============================================

 [ 1부터 10까지의 합 구하기 ]

 #include <stdio.h>
 int main () {
 
	int i = 1;

	int sum = 0;

	while ( i <= 10 ) {			// i가 10보다 작거나 같다면
	printf("i = %d\n", i);		// 실행코드 출력
	sum += i;				// sum = sum + i
	i++;				// 후치연산
 	}
	printf("while문 종료 후 1의 값 = %d\n",i);
	printf("1부터 10까지의 합 = %d\n", sum);
 }



 ============================================

 [ 문제 ]
 - 1부터 n(입력한 수) 까지의 합 구하기


 #include <stdio.h>
 int main() {

	int i = 1;
	int sum = 0;
	int num = 0;
	
	printf("정수를 입력하세요>>>");
	scanf_s("%d", &num);

	while( i <= num){			// i가 num보다 클때까지 반복
	printf("i의 값 : %d\n", i);		
	sum : sum + i;			// i를 더해준값을 sum에 저장
	i++;				// i는 1씩 증가
	}
	printf("1부터%d까지의 합 : %d\n", num,sum);
 return 0;
 }



 ============================================

 [ 중첩 while문 ]
 - 전체 구구단
 - 2단 ~ 9단까지 출력
 

 include <stdio.h>
 int main() {

	int dan = 2;
	int i = 1;

	while ( dan <=9 ) {				// 첫번째 while문	
	i = 1;					
	printf("------------------------%d단---------------------\n",dan);
	while ( i <= 9 ) {				// 두번째 while문
	printf("%d x %d = %d\n", dan,i,dan *i);		// 곱하기를 1부터 9까지 반복
	i++;					 	
	}					// 두번째 while문에서 i가 9보다 커지면 다시 첫번째 while문으로 돌아감			
	printf("\n");				// 첫번째 while문 조건이 맞지 않으면 전체 while문 종료				
	dan++;
  }
 }
	

 ============================================

 [ 문제 ]
 - 높이를 사용자로부터 입력받아서 그 높이만큼의 삼각형을 출력하세요
 - 탈출용 변수 2개 필요
 - 개행 ( 줄바꿈 )
 - 별

 [ 결과값 ]

 *		0번째 줄
 **		1번째 줄
 ***		2번째 줄

	개행		별의 수
	(i)		(j)
	o		1 (0+1)
	1		2 (1+1)
	2		3 (2+1)

	n-1		n ( (n - 1) + 1)


 #include <stdio.h>
 int main() {

	int i = 0;
 	int j = 0;
	
	while ( i <= 2) {		// 0,1,2
	
	j = 0;			//j값이 1씩 커질때마다 '*'수도 1씩 증가
	while ( j <= i ) {
	printf("*");
	j++;
	}
	printf("\n");		
	i++;
	}
 }
	

 ============================================


 [ 제어문 - break ]
 - 제어문은 반복문과 조건문에 필터링 기능을 부여하는 방법
 - 1. 반복문 탈출에 사용
 - 2. whitch문 case 탈출에 사용


 ============================================


 [ while - 무한 루프 ]

 - 값을 사용자로부터 입력받아 모두 더하는 프로그램을 만들어 보시오.
 - 값이 -1이라면 프로그램 종료


 #include <stdio.h>
 int main () {

	int tmp = 0;			// 키보드 값 받는 임시변수
	int sum = 0;			// 값누적 변수

	while (1) {			// (1)= 조건이 참일때
	printf("이 프로그램은 입력하신 숫자를 모두 더해주는 프로그램입니다.>>>\n");
	printf("값을 입력해주세요 (종료는 -1입니다.)>>>");
	scanf_s("%d", &tmp);
	printf("\n");
	if ( tmp == -1 ) {			// tmp가 -1이라면
	printf("break사용!!!\n");		// break 발동되며 실행코드 출력 후 종료
	break;
	}
	sum += tmp;			// sum = sum + tmp
	}				// while문 종료
	printf("누적합 : %d\n", sum);
 return 0;
 }







