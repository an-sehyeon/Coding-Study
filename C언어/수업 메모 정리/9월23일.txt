
	## 프로그래밍 ##
프로그램(program) : 프로그램 언어로 이루어지 명령들의 집합
- 컴퓨터의 프로그램을 작성하는 일

프로그램 언어 : 컴퓨터 시스템을 구동시키는 소프트웨어를 작성하기 위한 형식언어. 
- 컴퓨터와의 의사소통을 위한 수단



	## 프로그램의 실행 과정 ##
영어로 코드 작성 -> 실행 -> 컴파일 -> 디버깅 -> 실행

컴파일(compile) : 고급언어로 작성된 프로그램을 기계어(이진수, 0과1로 표현하는 수)로 변역하는 것 / 해석하기

디버깅(Debugging) :  / 오류잡기



	## 프로그래밍 언어의 종류 ##
java, python, dart, c#, c, c++, etc...

저급언어 (low - level language) : 기계어, 어셈블리어

고급언어 ( high - level language ) : java, python, dart, c#, c, c++, etc...




	## 언어별 분야 ##
Python : 인공지능, 빅데이터, AI, (웹개발 etc)

Java : 웹 개발, 

C# : 게임개발, 유니티, 얼리얼엔진

C++ : 게임개발

----------------------------------------------------------------------------------------------------------------

파일 이름에 .c를 해줘야 됨

ctrl + shift + A = 소스파일에 새항목 추가하는 단축키

ctrl + f5 = 실행

main함수가 2개이상이 있으면 안됨

주석 사용법 : 블럭지정 => ctrl + k + c
주석 해제 : 블럭지정 => ctrl + k + u




==================================================================









// [ C언어 주석 ]

// 주석 : 프로그램 코드 내에 삽입된 사용자의 메모를 의미
//		= 코드 실행 결과에는 아무런 영향을 끼치지 않음.
  
// 쓰는이유 : 개발을 하다보면 코드 섹션(함수의 몸체)에 대한 설명이 필요함
//			: 협업할 때, 다른 개발자(프로그래머)와의 의사소통에 필요

// 주석 사용법 : 블럭지정 => ctrl + k + c
// 주석 해제 : 블럭지정 => ctrl + k + u

/*주석 사용 첫번째 예시*/
//주석 사용 두번째 예시

/*------------------------------------------------------------------------*/

// [ C언어 기본구조 ]

//함수(Function) == '기능'
// 
//함수 종류 : 1. 메인(main) 함수 : 최초로 실행되는 함수이고 딱 하나만 존재해야 함
//		   2. 라이브러리 함수 : 개발편의를 위해서 미리 만들어져 제공되는 함수
//							 ex): printf() : 모니터 출력함수, scanf() : 키보드 입력함수
//		   3. 사용자 정의 함수 : 개발자가 만든(정의한) 함수



						// include == '전처리문'
						// 전처리문 : 컴파일 과정 이전에 미리 처리되는 문장

						// <stdio.h> == '헤더파일'
						// ( Standard input Output  즉, 표준 입출력 파일 )
						// 헤더 파일 : 컴파일러에 의해 자동포함된 소스코드 파일
						// 헤더파일은 쉽게 말해 기본적인 함수를 가지고 있는 파일



// int main()		함수의 헤더(반환자료형 함수명)
// {					함수의 시작, 함수의 몸체 시작
//
// printf("hello world")		printf() : 모니터 출력 라이브러리 함수
// ;						   (세미콜론) : 코드 라인의 마침표 역할
//
// return 0;			반환값 0 ( 함수가 종료되었을 때 전달하는 값 )
//					return 0의 의미 : 함수가 무사히 종료되었다.
// } 				함수의 끝, 함수의 몸체 끝


/*------------------------------------------------------------------------*/

// [ ESCAPE 문자 ]

// '정보 표시' 목적으로 사용된 기본 그래픽 문자(영소문자, 숫자, 특수문자)와는 다르게 '제어' 목적으로 사용되는 특수문자

// 1. \n : 개행(줄바꿈)

// 2. \b : Back Space Key의 약어 (한문자 삭제)

// 3. \r : Carriage Return의 약어 (행의 처음으로 이동 ( 이때 CMD, 즉 명령 프롬포트에서는 INSERT MODE 적용 ))

// 4. \t : Tap Key의 약어 (탭키만큼 칸 이동 (8칸))

// 5. \a : Alarm의 약어 (시스템소리 발생)

// 6. \' : '출력

// 7. \" : "출력

// 8. \\ : \출력


/*------------------------------------------------------------------------*/

// [ ESCAPE 문자 예시]

// 1. \n 사용 예시
//#include <stdio.h>
//int main() {
//	printf("Hello World\n");
//	printf("Hello Java\n");
//	printf("Hello C++\n");
//	printf("Hello Python\n");
//
//		return 0;
//}

// 2. \b 사용 예시
//#include <stdio.h>
// int main() {
//	 printf("Hi\b\b Dong Ha\n");
//
//}

// 3. "출력 예시
//#include <stdio.h>
//int main() {
//	printf("My name is \"Dong Ha\"");
//
//	return 0;
//}

// 4. \t와 \r 사용 예시
//#include <stdio.h>
//int main() {
//	printf("Hello DongHa\n");
//	printf("boy\tgirl");
//	printf("up\rdo");
//
//	return 0;
//}

/*------------------------------------------------------------------------*/

//문제 1
//
//본인 이름/나이/성별/주소/전화번호를 출력해보세요
//[결과값]
//이름 : 홍길동
//나이 : 30
//성별 : 남
//주소 : 대구광역시
//전화번호 : 011-1111-1111
//#include <stdio.h>
//int main() {
//	printf("이름 : 홍길동\n");
//	printf("나이 : 30\n");
//	printf("성별 : 남\n");
//	printf("주소 : 대구광역시\n");
//	printf("전화번호 : 011-1111-1111\n");
//
//
//	return 0;
//}


//문제 2
//
//다음처럼 결과값이 나오도록 Print해보세요
//[결과값]
//제품코드		제품명		수량		단가
//1111			아이폰		30		160
//2222			아이맥		20		250
//3333			에어팟		10		40
#include <stdio.h>
int main() {

	printf("제품코드\t제품명\t 수량\t 단가\n");
	printf("1111\t\t아이폰\t 30\t 160\n");
	printf("2222\t\t아이맥\t 20\t 250\n");
	printf("3333\t\t에어팟\t 10\t 40\n");

	return 0;
}

/*------------------------------------------------------*/


//#include <stdio.h>
//int main() {	
//	printf("hello world");
//
//} 

