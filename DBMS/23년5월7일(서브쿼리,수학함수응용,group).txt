서브쿼리
-SQL문 안에 들어가는 또다른 SQL문
-예시 : 조건 걸어서 가져온 값으로 조건을 또 거는 형태

create table daegu_citizen(
name varchar(20),
age int,
job varchar(20)
);

insert into daegu_citizen values('송중기',33,'프로그래머');
insert into daegu_citizen values('이민호',30,'회사원');
insert into daegu_citizen values('정채연',23,'대학생');
insert into daegu_citizen values('박상민',31,'학원강사');
insert into daegu_citizen values('안철수',35,'프로그래머');
insert into daegu_citizen values('김민종',33,'가수');

select * from daegu_citizen;
select * from daegu_citizen where job in 
(select job from daegu_citizen where name = '송중기');
=송중기의 직업과 일치하는 직업을 가진 모든 사람을 출력

------------------------------------------------------------------

내장(수학)함수 응용

create table item(
id int primary key not null,
name varchar(20) not null,
price int not null,
amount int not null,
produce_date date not null
);

insert into item values(1001, '화이트하임', 1500, 50, now());
insert into item values(1002, '초코하임', 1500, 50, '2020-07-20');
insert into item values(1003, '쿠크다스', 2000, 100, '2020-01-20');
insert into item values(2001, '포도봉봉', 1200, 50, '2020-02-20');
insert into item values(2002, '웰치스포도', 1100, 50, '2020-03-20');
insert into item values(2003, '코카콜라', 2800, 100, '2020-04-20');
insert into item values(3001, '하이트', 1500, 150, '2020-05-20');
insert into item values(3002, '하이네켄', 2500, 150, '2020-06-20');
insert into item values(3003, '테라', 1200, 200, '2020-07-20');
insert into item values(4001, '진라면', 500, 100, '2020-08-20');
insert into item values(4002, '신라면', 800, 150,'2020-09-20');
insert into item values(4003, '열라면', 700, 100, '2020-10-20');

select * from item where id like '4%';
-상품 아이디가 4~로 시작하는

select sum(amount) from item;
-item 생산량 합계

select min(price) from item;
-item 가격 중 최소 가격

select max(price) from item;
-item 가격 중 최고 가격

select avg(price) from item;
-item 가격 평균

set @min_price = (select min(price) from item);
=@min_price라는 price최소값 변수생성
select name from item where price = @min_price;
select name, price from item where price = @min_price;

set @max_price = (select max(price) from item);
=@max_price라는 price최고값 변수생성
select name from item where price = @max_price;
select name, price from item where price = @max_price;

select avg(price) from item where id like '3%';
=id가 3으로 시작하는 데이터의 price평균값
select name,price,amount, price*amount
as total_price
from item where name='화이트하임';
=화이트하임의 이름, 가격, 수량, 가격*수량 값
(as로 컬럼별칭 지어서 출력)

select * from item where produce_date between '2020-07-20'
and '2020-09-20';
=생산일 20년7월20일부터 20년9월20일까지의 데이터 조회

select name,produce_date from item where datediff(now(),
produce_date) >= 180;
=생산날짜가 현재와 180일 이상 차이나는 아이템 조회
-6개월 이상된 
-now는 현재, produce_date는 생산날짜

select name,produce_date, datediff(now(), produce_date)
as DAYS_ELAPSED
from item where datediff(now(), produce_date) >=180;

응용 =	현재날짜 기준으로 입원 몇일째인가?
	현재날짜 기준으로 입고 몇일째인가?
	현재날짜 기준으로 생산 몇일째인가?

------------------------------------------------------------------
그룹화 하기
-group by

create table my_company(
id int,
type int,
name varchar(10)
);

insert into my_company values(1001,1,'김철수');
insert into my_company values(1001,1,'이민호');
insert into my_company values(1001,1,'홍길동');
insert into my_company values(1001,2,'이동준');
insert into my_company values(1001,2,'옥희종');

select * from my_company;

select type,count(name) from my_company GROUP BY type;
select type,count(name) as cnt from my_company GROUP BY type;

------------------------------------------------------------------------

문제1

create table member(
no int,
name varchar(10),
depart varchar(10)
);

insert into member values(1001,'이민호','영업');
insert into member values(1002,'김철수','영업');
insert into member values(2001,'정지소','기획');
insert into member values(2002,'신동민','기획');
insert into member values(2003,'강현우','기획');
insert into member values(1001,'이동준','개발');
insert into member values(1001,'안지민','개발');
insert into member values(1001,'박유미','개발');
insert into member values(1001,'장지혜','개발');

select * from member;
select depart, count(name) as num from member group by depart; 

-------------------------------------------------------------- 

문제2

create table item_info(
no int,
process_line varchar(10),
item_name varchar(10),
amount int
);

insert into item_info values(1001,'생산라인1','신라면',500);
insert into item_info values(1002,'생산라인1','안성탕면',300);
insert into item_info values(1003,'생산라인1','짜파게티',200);
insert into item_info values(2001,'생산라인2','꼬깔콘',200);
insert into item_info values(2002,'생산라인2','포카칩',300);
insert into item_info values(2003,'생산라인2','썬칩',100);
insert into item_info values(2004,'생산라인2','꼬북칩',800);
insert into item_info values(3001,'생산라인3','포카리',2100);
insert into item_info values(3002,'생산라인3','게토레이',1100);
insert into item_info values(3003,'생산라인3','파워에이드',1400);
insert into item_info values(3004,'생산라인3','맥콜',900);
insert into item_info values(3005,'생산라인3','환타',1300);

select * from item_info;
select process_line,sum(amount) as sum from item_info group by process_line;

-------------------------------------------------------------- 

문제3

create table english_score_info(
class int,
name varchar(10),
english_score int
);

insert into english_score_info values(1,'이민호',95.7);
insert into english_score_info values(1,'최성국',87.5);
insert into english_score_info values(1,'김예나',88.2);
insert into english_score_info values(2,'신재욱',85.6);
insert into english_score_info values(2,'강성우',89.4);
insert into english_score_info values(2,'장명진',78.2);
insert into english_score_info values(3,'박찬혁',97.7);
insert into english_score_info values(3,'정만식',76.5);
insert into english_score_info values(3,'구도형',82.1);

select * from english_score_info;
select class,avg(english_score) from english_score_info group by class;

select class,avg(english_score) from english_score_info group by class having
avg(english_score) >=85;

select class, round(avg(english_score),1) as eng_avg 
from english_score_info group by class having avg(english_score)
>=85 order by eng_avg asc;
=학년별로 그룹을 나눈뒤 영어접수를 평균낸 후 소수첫째자리까지 반올림하고
학년평균이 85점 이상인 학년만 내림차순으로 조회
GROUP BY로 반별로 묶어서 영어성적 평균 출력

HAVING - GROUP BY에 조건 주기

GROUP BY CLASS HAVING AVG(ENGLISH_SCORE) >= 85;
-반별 영어성적 평균이 85점이상인~

round(avg(english_score),1)
-영어성적 평균을 소수점 1째자리까지 반올림해서 표현

--------------------------------------------------------------

문제4

create table mart(
main_category varchar(20),
sub_category varchar(20),
product_name varchar(50),
produce int,
price int
);

insert into mart values('간식','과자','감자칩',100,1500);
insert into mart values('간식','과자','고구마칩',200,1500);
insert into mart values('간식','초콜릿','밀크초콜릿',500,2000);
insert into mart values('간식','초콜릿','다크초콜릿',700,2000);
insert into mart values('유제품','우유','우유1L',150,2500);
insert into mart values('유제품','우유','저지방1L',100,2500);
insert into mart values('유제품','치즈','체다치즈',50,4500);
insert into mart values('육류','소고기','안창살1인분',50,10000);
insert into mart values('육류','소고기','항정살1인분',50,10000);
insert into mart values('육류','돼지고기','삼겹살1인분',200,8000);
insert into mart values('육류','돼지고기','목살1인분',100,8000);
insert into mart values('육류','돼지고기','앞다리살1인분',100,8000);

select main_category,sum(produce) as 총수량,
round(avg(price),1) as 평균가격 , max(price) as 최고가
from mart group by main_category;

















